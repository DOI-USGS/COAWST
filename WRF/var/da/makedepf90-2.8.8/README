vim: ai expandtab

                            Makedepf90

       Copyright (C) 2000--2006 Erik Edelmann <erik.edelmann@iki.fi>


        Makedepf90 is a program for automatic creation of
        Makefile-style dependency lists for Fortran source code.


INSTALL

        Pre-compiled binary
        -------------------

        If you have downloaded a pre-compiled binary, just copy the
        executable 'makedepf90' and the manpage 'makedepf90.1' to wherever
        you want them, typically /usr/local/bin and /usr/local/man/man1, and
        give them proper permissions

        > cp makedepf90 /usr/local/bin
        > chmod a+x /usr/local/bin/makedepf90
        > cp makedepf90.1 /usr/local/man/man1
        > chmod a+r /usr/local/man/man1/makedepf90.1


        Source distribution
        -------------------

        To compile and install makedepf90, type the commands

                ./configure [options]
                make 
                make install

        Possible options to 'configure' are:

        --prefix=PREFIX         install files in PREFIX (default: /usr/local)
        
        --exec_prefix=EPREFIX   Prefix for executable files
                                (default: ${prefix})

        --bindir=DIR            install executables in DIR 
                                (default: ${exec_prefix}/bin)

        --mandir=DIR            install manpage in DIR 
                                (default: ${prefix}/man)

        ./configure will by default use 'gcc' as C compiler if found,
        otherwise 'cc'.  CFLAGS will by default be set to '-g -O2' for gcc
        and '-g' for cc.  To override these defaults, set environments
        variables CC and CFLAGS before running ./configure:

        (t)csh:
                setenv CC "C compiler you want to use"
                setenv CFLAGS "C compiler options you want to use"

        bash & friends:
                CC="C compiler you want to use"
                CFLAGS="C compiler options you want to use"


        If 'configure' doesn't work on your system (perhaps because it
        lacks a working bourne shell implementation), you may try to use
        'Makefile.def' after tweaking it for your needs.


PORTABILITY

        Makedepf90 is written in C.  The C code should compile with little
        or no changes with most standard (ansi C89) compliant C compilers
        on most Unix and Unix-like systems (including MacOS X), but I
        myself have tested recent versions only on GNU/Linux systems, since
        that is all I use myself nowadays.
        
        Parts of makedepf90 are written using flex & bison.  Since the C
        code they produce are included in the distribution, you don't need
        these tools unless you are going to make modifications to the
        source code.

        I have no experience with compiling makedepf90 on non-unix systems
        of my own, but an earlier (C++) version has been reported to work
        on Windows, with the following comment by Tim Prince:

                It requires an unidentified pair of files fnmatch.[ch]
                which I found elsewhere in a directory glibc2.1/posix. With
                that addition, it builds and runs without difficulty using
                g++ on Windows.

        With 'g++' replaced with 'gcc' I would guess that this is true for
        the newer (C) versions as well.


BUG REPORTS

        Please send bug reports or patches to erik.edelmann@iki.fi


HACKING

        If you intend to modify makedepf90, please note that the files
        find_dep.c, find_dep.h and lexer.c are automatically generated by
        bison and flex.  Don't edit them; edit find_dep.y or lexer.l
        instead.


COPYING
        
        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License version
        2 as published by the Free Software Foundation.

        This program is distributed in the hope that it will be useful, but
        WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
        General Public License in the file 'COPYING' for more details.
