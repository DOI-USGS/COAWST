!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.6 (r4165) - 21 sep 2011 20:54
!
!  Differentiation of da_calc_mu_uv in reverse (adjoint) mode:
!   gradient     of useful results: muu muv mu
!   with respect to varying inputs: mu
SUBROUTINE DA_CALC_MU_UV_B(mu, mub0, mub, muu, muub, muv, muvb, ids, ide&
&  , jds, jde)
  IMPLICIT NONE
  INTEGER, INTENT(IN) :: ids, ide, jds, jde
  REAL, DIMENSION(ids:ide, jds:jde), INTENT(IN) :: mu, mub
  REAL, DIMENSION(ids:ide, jds:jde) :: mub0
  REAL, DIMENSION(ids:ide + 1, jds:jde) :: muu
  REAL, DIMENSION(ids:ide+1, jds:jde) :: muub
  REAL, DIMENSION(ids:ide, jds:jde + 1) :: muv
  REAL, DIMENSION(ids:ide, jds:jde+1) :: muvb
  REAL, DIMENSION(ids - 1:ide + 1, jds - 1:jde + 1) :: mut
  REAL, DIMENSION(ids-1:ide+1, jds-1:jde+1) :: mutb
  INTEGER :: i, j
  mutb = 0.0
  DO j=jde+1,jds,-1
    DO i=ide,ids,-1
      mutb(i, j) = mutb(i, j) + 0.5*muvb(i, j)
      mutb(i, j-1) = mutb(i, j-1) + 0.5*muvb(i, j)
      muvb(i, j) = 0.0
    END DO
  END DO
  DO j=jde,jds,-1
    DO i=ide+1,ids,-1
      mutb(i, j) = mutb(i, j) + 0.5*muub(i, j)
      mutb(i-1, j) = mutb(i-1, j) + 0.5*muub(i, j)
      muub(i, j) = 0.0
    END DO
  END DO
  DO i=ide+1,ids-1,-1
    mutb(i, jde) = mutb(i, jde) + mutb(i, jde+1)
    mutb(i, jde+1) = 0.0
    mutb(i, jds) = mutb(i, jds) + mutb(i, jds-1)
    mutb(i, jds-1) = 0.0
  END DO
  DO j=jde,jds,-1
    mutb(ide, j) = mutb(ide, j) + mutb(ide+1, j)
    mutb(ide+1, j) = 0.0
    mutb(ids, j) = mutb(ids, j) + mutb(ids-1, j)
    mutb(ids-1, j) = 0.0
    DO i=ide,ids,-1
      mub0(i, j) = mub0(i, j) + mutb(i, j)
      mutb(i, j) = 0.0
    END DO
  END DO
END SUBROUTINE DA_CALC_MU_UV_B
