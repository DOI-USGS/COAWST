subroutine SwanSumOverNodes ( rval )
!
!   --|-----------------------------------------------------------|--
!     | Delft University of Technology                            |
!     | Faculty of Civil Engineering and Geosciences              |
!     | Environmental Fluid Mechanics Section                     |
!     | P.O. Box 5048, 2600 GA  Delft, The Netherlands            |
!     |                                                           |
!     | Programmer: Marcel Zijlema                                |
!   --|-----------------------------------------------------------|--
!
!
!     SWAN (Simulating WAves Nearshore); a third generation wave model
!     Copyright (C) 1993-2023  Delft University of Technology
!
!     This program is free software: you can redistribute it and/or modify
!     it under the terms of the GNU General Public License as published by
!     the Free Software Foundation, either version 3 of the License, or
!     (at your option) any later version.
!
!     This program is distributed in the hope that it will be useful,
!     but WITHOUT ANY WARRANTY; without even the implied warranty of
!     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
!     GNU General Public License for more details.
!
!     You should have received a copy of the GNU General Public License
!     along with this program. If not, see <http://www.gnu.org/licenses/>.
!
!
!   Authors
!
!   40.95: Marcel Zijlema
!
!   Updates
!
!   40.95, July 2008: New subroutine
!
!   Purpose
!
!   Performs a global sum of reals over all nodes
!
!   Modules used
!
    use ocpcomm4
!
    implicit none
!
!   Argument variables
!
    real, intent(inout)     :: rval     ! input value
!
!   Local variables
!
    integer                 :: count    ! length of array to be collect
    integer, save           :: ient = 0 ! number of entries in this subroutine
    real                    :: sumval   ! sum total of all input values from all subdomains
!
!   Structure
!
!   Description of the pseudo code
!
!   Source text
!
    if (ltrace) call strace (ient,'SwanSumOverNodes')
    !
    ! if not parallel, return
    !
    !
!TIMG    call SWTSTA(202)
    sumval = 0.
    count  = 1
    !
    rval = sumval
!TIMG    call SWTSTO(202)
    !
end subroutine SwanSumOverNodes
